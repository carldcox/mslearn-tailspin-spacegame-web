trigger:
- '*'

pool:
<<<<<<< HEAD
  vmImage: 'ubuntu-16.04'
  demands:
    - npm
=======
  vmImage: 'ubuntu-latest'
  demands:
  - npm
>>>>>>> build-pipeline

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.100'

steps:
- task: UseDotNet@2
<<<<<<< HEAD
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'
=======
  displayName: 'Use .Net core SDK $(dotnetSdkVersion)'
  inputs:
    packageType: sdk
    version: $(dotnetSdkVersion)
>>>>>>> build-pipeline

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

<<<<<<< HEAD
- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
=======
- template: 'templates/build.yml'
  parameters: 
    buildConfiguration: 'Debug'

- template: 'templates/build.yml'
  parameters: 
>>>>>>> build-pipeline
    buildConfiguration: 'Release'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()